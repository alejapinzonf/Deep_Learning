import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow import keras
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

data = pd.read_excel('Datos_Tarea2.xlsx', sheet_name='Datos').values
X, Y = data[:, :8], data[:, 8]

X_Train, X_Test, Y_Train, Y_Test = train_test_split(X, Y, test_size=0.3, random_state=0)

model = keras.Sequential([
    keras.layers.Dense(100, activation='relu', input_dim=8),
    keras.layers.Dense(100, activation='relu'),
    keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

history = model.fit(X_Train, Y_Train, validation_data=(X_Test, Y_Test), batch_size=20, epochs=200)

loss, accuracy = model.evaluate(X_Test, Y_Test)
print(f"Precision en los datos de prueba: {accuracy * 100:.2f}%")

for epoch, (train_loss, val_loss) in enumerate(zip(history.history['loss'], history.history['val_loss'])):
    print(f"Epoca {epoch + 1}: PErdida en entrenamiento: {train_loss:.4f}, Perdida en validacion: {val_loss:.4f}")

plt.figure(2)
plt.plot(history.history['loss'], label='PErdida en entrenamiento')
plt.plot(history.history['val_loss'], label='Perdida en validación')
plt.xlabel('Epocas')
plt.ylabel('Pérdida')
plt.legend()
plt.title('Curva de Pérdida durante el Entrenamiento')
plt.show()
